배열 객체는 왜 const로 만들었는데도 값 수정이 가능하지?
자바스크립트로 메모리 저장 방식

힙 : 값 할당이 이루어지는 곳
콜 스택 : 힙에 저장된 객체를 참조하여 호출된 함수의 정보를 저장하고 실행하는 곳

힙에는 객체(object)가 저장
콜스택에는 원시 타입 데이터가 저장

1. 원시 타입 데이터 저장 방식
    - 원시 타입이므로 콜스택에 값이 바로 저장
    - 변수에는 콜스택(렉시컬 환경) 메모리 주소값이 저장

2. 참조 타입 데이터 저장 방식
    - 배열, 객체, 함수 등은 참조 타입이므로 메모리 힙에 저장된다.
    - 참조타입 데이터가 저장된 메모리의 주소 값을 콜스택에 저장
    - 변수에는 메모리 힙의 주소값이 저장

let imhyung = {
    name: "김임형"
}

let obj = {}
let obj2 = obj

obj === obj2 // true

얕은 복사
값을 복사하여 할당했을 때 같은 메모리 주소를 가리키는 것

깊은 복사
얕은 복사와 달리 주소를 복사해서 공유하는 것이 아니라 아예 새로운 주소에 값을 저장하고
해당 주소를 가리키는 것

-----------------------------------------------------------------------------------------

Number

new Number(123);
123;

new Number("str");
NaN;

Number.MAX_VALUE // 자바스크립트에서 사용 가능한 수중 가장 큰 숫자(1.7e+308), INFINITY
Number.NIM_VALUE // 자바스크립트에서 사용 가능한 수중 가장 적은 숫자, 0에 가까움
Number.isFinit() : boolean 유한수인지
Number.prototype.toString(3) : 문자열 변환

* Math

    * Math.min(a,b...z) 최댓값
    * Math.max(a,b...z) 최솟값
    Math.random() 0 ~ 1 사이의 무작위 숫자 반환
    * Math.round(a) 소숫점 첫번째 자리에서 반올림
    * Math.floor(a) 소숫점 이하 버림
    * Math.ceil(a) 소숫점 이하 올림
    * Math.abs(a) a의 절댓값
    Math.aqrt(a) a의 제곱근
    Math.cbrt(a) a의 세제곱근
    Math.log(a) a의 자연로그
    ...
    Math.pow, log2, sign...

String
    String.length() : 문자열 길이
    String.prototype.charAt(index) 
                    .concat()
                    .indexOf()
                    .replace('a', 'b') // a라는 문자를 b로 바꾸는 것

    ex) "Hello".replace("e","o") // Hollo
               .replace(정규표현식가능, 바꿀 문자)

               .toLowerCase();
               .toUpperCase();
               .split();
               .repeat(n);


* Date

-----------------------------------------------------------------------------------------